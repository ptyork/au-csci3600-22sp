/////////////////////////////////////////////////////////////////////////
// This file was generated automatically for me when I installed Prisma.
//
//   npm install prisma --save-dev
//   npx prisma init
//
// I then edited the .env file to change to use a SQLite file.
// Likewise I edited the "provider" below.
// Next I added models (also below).
//
/////////////////////////////////////////////////////////////////////////

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/////////////////////////////////////////////////////////////////////////
//
// Describe a really simple one Author to many Books data model.
// Can be much more involved:
//   https://www.prisma.io/docs/concepts/components/prisma-schema/data-model
//
// Once defined you need to generate BOTH the database AND the associated
// TypeScript files.
//   https://www.prisma.io/docs/guides/database/developing-with-prisma-migrate
//   https://www.prisma.io/docs/concepts/components/prisma-client
//
// Basically:
//   npx prisma migrate dev         (will ask for a name...whatever you want)
//
//   npm install @prisma/client     (only need to do this once)
//   npx prisma generate
//
/////////////////////////////////////////////////////////////////////////

model Book {
  id          Int     @id @default(autoincrement())
  title       String
  yearWritten Int?
  edition     String?
  price       Float?
  picURL      String?
  author      Author  @relation(fields: [authorId], references: [id])
  authorId    Int
}

model Author {
  id          Int     @id @default(autoincrement())
  firstName   String?
  lastName    String
  yearOfBirth Int
  yearOfDeath Int?
  books       Book[]
}
